import os
import torch
import pandas as pd

from PIL import Image
from torch.utils.data import Dataset


class Custom_Dataset(Dataset):
    def __init__(self, df: pd.DataFrame, root_dir, type='full', transform=None) -> None:
        
        if type == 'full':
            self.df = df
        else:
            self.df = df[df['type'] == type]

        self.root_dir = root_dir
        self.transform = transform

    def __len__(self):
        return len(self.df)

    def __getitem__(self, index):

        img_path = os.path.join(self.df['path'][index], self.df['file_name'][index])
        img = Image.open(img_path)

        label = torch.tensor(int(self.df["encoded_dx"][index]))

        if self.transform:
            img = self.transform(img)

        return img, label
